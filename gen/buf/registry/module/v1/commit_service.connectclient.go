// Copyright 2023-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-connectclient-go DO NOT EDIT.
// source: buf/registry/module/v1/commit_service.proto

package modulev1

import (
	context "context"
)

type CommitServiceClient service

func (s *CommitServiceClient) GetCommits(ctx context.Context, req *GetCommitsRequest) (*GetCommitsResponse, error) {
	resp := new(GetCommitsResponse)
	if err := s.client.do(ctx, req, resp, "/buf.registry.module.v1.CommitService/GetCommits"); err != nil {
		return nil, err
	}
	return resp, nil
}

func (s *CommitServiceClient) ListCommits(ctx context.Context, req *ListCommitsRequest) (*ListCommitsResponse, error) {
	resp := new(ListCommitsResponse)
	if err := s.client.do(ctx, req, resp, "/buf.registry.module.v1.CommitService/ListCommits"); err != nil {
		return nil, err
	}
	return resp, nil
}
