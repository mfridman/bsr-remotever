// Copyright 2023-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-connectclient-go DO NOT EDIT.
// source: buf/registry/module/v1/label_service.proto

package modulev1

import (
	context "context"
)

type LabelServiceClient service

func (s *LabelServiceClient) GetLabels(ctx context.Context, req *GetLabelsRequest) (*GetLabelsResponse, error) {
	resp := new(GetLabelsResponse)
	if err := s.client.do(ctx, req, resp, "/buf.registry.module.v1.LabelService/GetLabels"); err != nil {
		return nil, err
	}
	return resp, nil
}

func (s *LabelServiceClient) ListLabels(ctx context.Context, req *ListLabelsRequest) (*ListLabelsResponse, error) {
	resp := new(ListLabelsResponse)
	if err := s.client.do(ctx, req, resp, "/buf.registry.module.v1.LabelService/ListLabels"); err != nil {
		return nil, err
	}
	return resp, nil
}

func (s *LabelServiceClient) ListLabelHistory(ctx context.Context, req *ListLabelHistoryRequest) (*ListLabelHistoryResponse, error) {
	resp := new(ListLabelHistoryResponse)
	if err := s.client.do(ctx, req, resp, "/buf.registry.module.v1.LabelService/ListLabelHistory"); err != nil {
		return nil, err
	}
	return resp, nil
}

func (s *LabelServiceClient) CreateOrUpdateLabels(ctx context.Context, req *CreateOrUpdateLabelsRequest) (*CreateOrUpdateLabelsResponse, error) {
	resp := new(CreateOrUpdateLabelsResponse)
	if err := s.client.do(ctx, req, resp, "/buf.registry.module.v1.LabelService/CreateOrUpdateLabels"); err != nil {
		return nil, err
	}
	return resp, nil
}

func (s *LabelServiceClient) ArchiveLabels(ctx context.Context, req *ArchiveLabelsRequest) (*ArchiveLabelsResponse, error) {
	resp := new(ArchiveLabelsResponse)
	if err := s.client.do(ctx, req, resp, "/buf.registry.module.v1.LabelService/ArchiveLabels"); err != nil {
		return nil, err
	}
	return resp, nil
}

func (s *LabelServiceClient) UnarchiveLabels(ctx context.Context, req *UnarchiveLabelsRequest) (*UnarchiveLabelsResponse, error) {
	resp := new(UnarchiveLabelsResponse)
	if err := s.client.do(ctx, req, resp, "/buf.registry.module.v1.LabelService/UnarchiveLabels"); err != nil {
		return nil, err
	}
	return resp, nil
}
